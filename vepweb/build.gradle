import org.apache.tools.ant.taskdefs.condition.Os

version = 'v0.9.2'
group   = 'vep'

def pubServeHost = 'vep.dev'
def pubServePort = '8079'

// Tasks for dart
task pubGet(type: Exec) {
  workingDir '.'

  if (Os.isFamily(Os.FAMILY_WINDOWS)) {
    commandLine 'cmd', '/c', 'pub.bat get'
  } else {
    commandLine 'pub get'
  }
}

// Tasks for dart
task pubServe(type: Exec) {
  workingDir '.'
  
  if (Os.isFamily(Os.FAMILY_WINDOWS)) {
    commandLine 'cmd', '/c', 'pub.bat serve --hostname ' + pubServeHost + ' --port ' + pubServePort + ' --no-dart2js web'
  } else {
    commandLine 'pub serve --hostname ' + pubServeHost + ' --port ' + pubServePort + ' --no-dart2js web'
  }
}

task dartBuild(type: Exec, dependsOn: 'pubGet') {
  workingDir '.'
  
  if (Os.isFamily(Os.FAMILY_WINDOWS)) {
    commandLine 'cmd', '/c', 'dart2js.bat -m --enable-experimental-mirrors -o web/main.js web/main.dart'
  } else {
    commandLine 'dart2js -m --enable-experimental-mirrors -o web/main.js web/main.dart'
  }
}

// Tasks for sass
task sassBuild(type: Exec) {
  workingDir 'web/public/styles'
  
  if (Os.isFamily(Os.FAMILY_WINDOWS)) {
    commandLine 'cmd', '/c', 'sass -t compressed sass/main.scss styles.css'
  } else {
    commandLine 'sass -t compressed sass/main.scss styles.css'
  }
}

task sassCompile(type: Exec) {
  workingDir 'web/public/styles'
  
  if (Os.isFamily(Os.FAMILY_WINDOWS)) {
    commandLine 'cmd', '/c', 'sass sass/main.scss styles.css'
  } else {
    commandLine 'sass sass/main.scss styles.css'
  }
}

task sassWatch(type: Exec) {
  workingDir 'web/public/styles'
  
  if (Os.isFamily(Os.FAMILY_WINDOWS)) {
    commandLine 'cmd', '/c', 'sass --watch sass/main.scss:styles.css'
  } else {
    commandLine 'sass --watch sass/main.scss:styles.css'
  }
}

// Tasks to build a file structure with only production file (to include in server resources)
task templateExport(type: Copy) {
  from 'lib/component'
  into 'out/packages/vepweb/component'
  include '**/*.html'
}

task webExport(type: Copy) {
  from 'web'
  into 'out/'
  exclude 'index.dev.html'
  exclude 'index.html'
  exclude 'main.dart'
  exclude 'packages/**'
  exclude '**/packages/**'
  exclude 'public/styles/sass'
  exclude 'public/styles/.sass-cache'
  rename('index.production.html', 'index.html')
}

task build(dependsOn: ['dartBuild', 'sassBuild'])

task export(dependsOn: ['templateExport', 'webExport'])

task assemble(dependsOn: ['build', 'export'])